saltit project
[version]
2015-9 ~ 2015-11
wrriten by Alan Dershowitz.

2015-11-1
i found the 'DEBUG' is sipirt of debugging.
a test-func can be a diretly func,or a 2+ layer invokes func,
tonight i invoke 'actively.sh',but not gave good result,why,because in its-invoking func -- help_of_find()
has a [[ $DEBUG > 1 ]] && echotest "something..."
the 2+ layer invokes func -- actively.sh,can not display the bottom func's echo(stdout) right now,instead,it
display the 2+ layer output,after whole return,then show the before msg from boottom func's output.
so,i wriiten a commit said 'it is harmful for debuger...'
but,but..
i make mistaken,
old bash administrator's lesson is new yet:
just handle the 2+ layer test-func like this:
(head)
. $FUNCPATH/base 2>/dev/null
DEBUG=0
(then do before)

i mean setup a 'DEBUG' in 2+ layer test-func,can overide echo event before.

[purpose]
encoded local datas,upload to cloud server.
user just need remember one simple password,example:"1",after download encoded-datas and decodeding them.
so,let us say saltit is a peronal-prividge protecter.

[usage]
1)put data files(who need encode) in one directory,add a '.ignores' file,a 'token' file in the directory.
2) run ~/saltit/scripts/saltit.sh 
3)during the script(saltit.sh) processing,input your simple password(example '1').
4)upload result files(to cloud server or a protectting directory in locale zone).

[project status ]
as now,it be control by GIT,git-repositories at:
1)hp ultrabook's disc.
2)hp pc's disc,at /c/Users/Administrator/tempP
3)raspberry pi2 B+
4)MacBook /Users/apple/workspace/saltit/
after some days,it will be post to AWS.

[test case]
in developping.


[tag(mile stone)]
2015-10-30 disable 'token' ,only '.token' is valid (MacBook Air)

[core functions]
actively.sh
	
base
	provides 2 variables:1) ABSROOT 2) FUNCPATH 
	if microsoft's MingGW env,seq() definiation will add.
checkvalidor.sh
	check $1 is given,$1 is a directory's name.
	check $1 is a valid directory
	$1 valid when:
	is a exists dir,
	has a .token
	Not have a done file.
help_of_find.sh
	no argument.
	return "No Way" if can not find any ".token" file.
	else,return the listname.

rework_or_exit_whole.sh
	no argument.
	lead user to interaction processor,give '1' ,'2' two choices.
	choice '1',exit all processor.
	choice '2',set variable 'step' to '=1'(rework) step44 means exit all,step1 means reback the first.
	will check 'step' as soon as func invoke,if not set will warnning.
split_if_ness.sh
	$1:
	$2:
	return None.split big file(>=4M)
upload_all_except_ignores.sh
	$1:is directory which contains encoded_need_files.
	echo to stdout a warnning msg if the dir has a '.done' file,
	in this case,touch a '.done' file at last,
	echo to stdout a list(filenames) if all is right.
	
[Notices]
1,dont rely checking arguments length,in dirctly layer(test the base function),arguments length will tell us 
if the function received hoped arguments,but in 2+ layer invokes,first argument has changed,arguments length will
add 1.
