saltit project
[version]
2015-9 ~ 2015-11
wrriten by Alan Dershowitz.

2015-11-1
i found the 'DEBUG' is sipirt of debugging.
a test-func can be a diretly func,or a 2+ layer invokes func,
tonight i invoke 'actively.sh',but not gave good result,why,because in its-invoking func -- help_find_dot_token()
has a [[ $DEBUG > 1 ]] && echotest "something..."
the 2+ layer invokes func -- actively.sh,can not display the bottom func's echo(stdout) right now,instead,it
display the 2+ layer output,after whole return,then show the before msg from boottom func's output.
so,i wriiten a commit said 'it is harmful for debuger...'
but,but..
i make mistaken,
old bash administrator's lesson is new yet:
just handle the 2+ layer test-func like this:
(head)
. $FUNCPATH/base 2>/dev/null
DEBUG=0
(then do before)

i mean setup a 'DEBUG' in 2+ layer test-func,can overide echo event before.
...

version new
today found a mistoken ,because today i move my project to a pc ,how long i have not work on it.
its a old pc with mirosoft win7 os.
after git clone,i can not run any test,so it must because the conf/abs.conf,the first gate of whole.
run 'bash -x conf/abs.conf' ,found the problem core -- 'uname -r' dont display any 'Administrator' strings?!
some while i know why it be,because recently upgrade this pc.
fixed it with this line:
	[[ unamedispaly == *MICRO-ULT1M8* ]];then
all is right then.

about 'fuchanpin'
this calculator game sys is for my little daughter -- Manman.
it is not good enough to sell to anyone.
three important fact:
1) the getaddXXX funcs need refact to a better method
2) not sure avoid 'too close' problem.
3) directory and file ,even global variable is solid,not dynamic.
maybe some time later,i will fix it myself.



2015-12-10 new tag:pleaseuser(==please user(s))
a first available,consistant version,now hp pc,hp noteboot,apple air,has 3 versins.
means when i encode from hp pc,decode via apple,will fails.
so,decide is "HP PC hold the main line of development"
reason is its fuchanpin is far from anothers,i want expand it more times.

newest ver:tag pleaseuser:
commit: 5a91a48530f5ec96c0bc7d893d236d33932d649e
[purpose]
encoded local datas,upload to cloud server.
user just need remember one simple password,example:"1",after download encoded-datas and decodeding them.
so,let us say saltit is a peronal-prividge protecter.

[usage]
1)put data files(who need encode) in one directory,add a '.ignores' file,a 'token' file in the directory.
2) run ~/saltit/scripts/saltit.sh 
3)during the script(saltit.sh) processing,input your simple password(example '1').
4)upload result files(to cloud server or a protectting directory in locale zone).

[project status ]
as now,it be control by GIT,git-repositories at:
1)hp ultrabook's disc.
2)hp pc's disc,at /c/Users/Administrator/tempP
3)raspberry pi2 B+
4)MacBook /Users/apple/workspace/saltit/
after some days,it will be post to AWS.

[test case]
in developping.


[tag(mile stone)]
2015-10-30 disable 'token' ,only '.token' is valid (MacBook Air)

[core functions]
abs.conf
	in fact,it is 'abs.sh'.
	it run 'uname -a',extract the os infomation,let us find each os(machine)'s directories.
	provides some core global variable
	1)ABSROOT
	2)FUNCPATH

actively.sh
	
base
	provides 3 variables:1) SIMPLE_PASSWORD 2) SHARE_D 3) UPLOADS
	provides some functions for debugging or some purposes:
	function huali -- separator each test in one debugging prossecceing.
	function iisr -- a judgement,remember when judge two string if equal,use '"$var" = "CONST"' format,empty,quotes.
	function include_all -- let all function included into the shell env.
	
	if microsoft's MingGW env,seq() definiation will add.
checkvalidor.sh
	check $1 is given,$1 is a directory's name.
	check $1 is a valid directory
	$1 valid when:
	is a exists dir,
	has a .token
	Not have a done file.
help_find_dot_token.sh(old name help_of_find)
	no argument.
	return "No Way" if can not find any ".token" file.
	else,return the listname.

rework_or_exit_whole.sh
	no argument.
	lead user to interaction processor,give '1' ,'2' two choices.
	choice '1',exit all processor.
	choice '2',set variable 'step' to '=1'(rework) step44 means exit all,step1 means reback the first.
	will check 'step' as soon as func invoke,if not set will warnning.
split_if_ness.sh
	$1:
	$2:
	return None.split big file(>=4M)
upload_all_except_ignores.sh
	$1:is directory which contains encoded_need_files.
	echo to stdout a warnning msg if the dir has a '.done' file,
	in this case,touch a '.done' file at last,
	echo to stdout a list(filenames) if all is right.
	# 2015-11-23 found -d type error.
	before that day,the func can not handle while ls $1 has one or more dir,add a if..fi logo fixed it.

salteach.sh
	$1 is a valid file,no more than 4M(templary defination)
	$2 is a simple-plain-password,like:0 00 01..
	return status code.

offsalteach.sh
	it is a reverser of 'salteach'.
	$1 is a token-file(which encryed 'okay' string)
	$2 is the object-file(encryed).
	return status code.
	
[Notices]
1,dont rely checking arguments length,in dirctly layer(test the base function),arguments length will tell us 
if the function received hoped arguments,but in 2+ layer invokes,first argument has changed,arguments length will
add 1.
2,in conf/abs.conf(in fact,it is a .sh file),i replace the unix 'seq()' for mingw enviroment,rember two facts,one is the exceed range more 1 than unix's,means seq 1 10 will get '1 2 3 4 5 6 7 8 9 10',NOT '1 2 3 4 5 6 7 8 9';two,only accept $1 and $2,because we only use in our project here.

[skill1]
	in 'MinGW+Win' env,a small,small problem exists,today when i debug my 'upload_all_except_ignores' func,i pre push some files,via:
		touch {a,b,c,d,A,B,C,D}.txt
	but at last i found the fact,in 'MinGW+Win' env,"a.txt==A.txt",so,above command only get 4 files {a,b,c,d}.txt.
	replace,i rewrite this part:
		touch a{1,2,3,4,5,6,7,8}.txt
		there are two abivous parts,odd order name file:a1.txt,a3.txt,a5...and evens.
[skill2]
in 'scripts/tests/test_actively.sh':
set $( ls ${UPLOADS}/encoded_*data )
(then)
echo $#
means:
1> bullitin command:set(no optional),give a list of arguments,sample:
	set a b c
	echo $1
	>> a
2> after invokes 'set' command,then,we can measure argument's length,in this test case,it is 3(a,b,d.txt).

3> iisl and iisr
	in file:scripts/functions/base,there are two assertional func.
	iisl:if i say like,its $1 is a regex expression's "left" part,and $2 is the "right" part.
		notice that,iisl's $1 and $2 must be a string,means it should quoted must often it has 'space' between some words.
